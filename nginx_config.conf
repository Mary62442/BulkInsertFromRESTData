

# after having installed nginx on ubuntu 18.04 following the guide at:
# https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04

# the following file must be copied in
# /etc/nginx/sites-enabled

# then refresh nginx using the following commands:
# sudo systemctl stop nginx
# sudo systemctl start nginx
# sudo systemctl status nginx


# in this dev scenario nginx is installed on the same machine as the nodes of the load balancer are installed.

# in a production's scenario we will have the system deployed on the cloud using 6 VMs.
# five vms for the five nodes.
# 1 vm for the nginx web server.

client_max_body_size 100M;  # for big uploads

upstream loadbalancer {
    ip_hash; # to secure session consistency on each node
    server 127.0.0.1:8001;  
    server 127.0.0.1:8002; 
    server 127.0.0.1:8003;
    server 127.0.0.1:8004; 
    server 127.0.0.1:8005;

# instead of local nodes we can use f1-micro (1 vCPU, 0.6 GB memory)  Google Cloud Platform
# or
# t2.micro (Variable ECUs, 1 vCPUs, 2.5 GHz, Intel Xeon Family, 1 GiB memory, EBS only) AWS  (better performance than google platform' s free tier fi-micro)
#    ip_hash;
#    server 34.66.22.102:8000; 
#    server ............:8000;
#    server ............:8000;
#    server ............:8000;
#    server ............:8000;

# for each node of the load balancer the corresponding vm in production will have specific firewall rules that allow inbound and outbound 
# communication on the port 8000 (AWS -> security groups, Google cloud platfor -> firewall rules of network adapter)

}


server { 
    server_name localhost;  

    # in production we will use for example a new registered domain like bestscores.com 
    # and we will create a subdomain in the DNS' record A of it pointing to the ip of the vm that hosts nginx.
    # an example of record A could be the following key/value pair:

    #         subdomain                  |   nginx vm's ip
    #         ---------------------------|------------------
    #         getscorewithloadbalancer   |   37.12.56.89  

    listen 80;
    listen [::]:80 ;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade; 
        proxy_pass http://loadbalancer;       
    }

    

}






